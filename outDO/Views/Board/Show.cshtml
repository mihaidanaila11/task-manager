@using Microsoft.AspNetCore.Identity
@using outDO.Services
@using outDO.Models
@inject UserManager<User> UserManager
@inject IProjectService ProjectService
@model outDO.Models.Board
@using Newtonsoft.Json

<h2>@Model.Name</h2>
<hr />

<a class="btn btn-success mb-3" asp-controller="Board" asp-action="GoBack" asp-route-id="@Model.Id">Go Back</a>

@if (ProjectService.isUserOrganiserBoard(@Model.Id, UserManager.GetUserId(User)))
{
    <a class="btn btn-success mb-3" asp-controller="Task" asp-action="New" asp-route-id="@Model.Id">Add Task</a>
}

<h3>Tasks</h3>
<div class="d-flex justify-content-around mt-3">
    @foreach (var task in ViewBag.Tasks)
    {
        <div class="card col-3 text-center">
            <div class="m-3">
                <h4>@task.Title</h4>
                @if(@task.Description != null)
                {
                    <p>@task.Description</p>
                }
                <h4>Status: @task.Status</h4>
                <p>Start date @task.DateStart.ToString("dd/MM/yyyy/")</p>
                <p>Deadline: @task.DateFinish.ToString("dd/MM/yyyy/")</p>
                
                <a class="btn btn-success" asp-controller="Task" asp-action="Show" asp-route-id="@task.Id">View Task</a>



                <hr />
                @if (task.TaskMembers != null && task.TaskMembers.Count >0)
                {
                    <p>Members:</p>
                    <ul>
                        @{
                            var index = 0;
                            foreach (var member in task.TaskMembers)
                            {
                                if(index<3)
                                {
                                    index += 1;
                                    <p>@member.UserName</p>
                                }
                                else
                                {
                                    <p>+more</p>
                                    break;
                                }
                        }   
                    }
                </ul>
            }
            else
            {
                <p>No members assigned</p>
            }
      <hr />

 @if (task.Media != null)
                {
                    <img src="@task.Media" class="img-thumbnail" />
                }

                @if (task.Video != null)
                {
                    <div class="embed-responsive embed-responsive-16by9">
                        @{
                            if (ViewBag.videoEmbLinks[task.Id].Item1 == "youtube")
                            {

                                <iframe class="embed-responsive-item mt-3"
                                        src="@ViewBag.videoEmbLinks[task.Id].Item2"
                                        title="YouTube video player"
                                frameborder="0"></iframe>

                            }
                            else if (ViewBag.videoEmbLinks[task.Id].Item1 == "tiktok")
                            {
                                // var requestResponse = new Microsoft.AspNetCore.Html.HtmlString((ViewBag.videoEmbLinks[task.Id].Item2));
                                var requestResponse = JsonConvert.DeserializeObject<Dictionary<string, string>>(ViewBag.videoEmbLinks[task.Id].Item2);

                                var tiktokEmbeded = new Microsoft.AspNetCore.Html.HtmlString(requestResponse["html"]);
                                <div>@tiktokEmbeded</div>
                            }
                        }
                    </div>
                }

        </div>
    </div>
}

</div>

